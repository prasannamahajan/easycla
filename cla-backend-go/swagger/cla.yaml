# Copyright The Linux Foundation and each contributor to CommunityBridge.
# SPDX-License-Identifier: MIT
swagger: '2.0'
info:
  title: CLA API
  version: '1.0'
basePath: /v3
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  OauthSecurity:
    type: oauth2
    flow: accessCode
    authorizationUrl: 'https://accounts.google.com/o/oauth2/v2/auth'
    tokenUrl: 'https://www.googleapis.com/oauth2/v4/token'
    scopes:
      admin: LF Admin scope
      project: Project Manager scope
      company: CLA Manager scope
      contrib: Contributor scope
tags:
  - name: services

paths:
  /ops/health:
    get:
      summary: API Health Check
      security: []
      operationId: healthCheck
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/health'
        '503':
          description: ''
          schema:
            $ref: '#/definitions/health'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - health

  /api-docs:
    get:
      security: []
      summary: Get swagger documentation
      operationId: getDoc
      produces:
        - text/html
      responses:
        200:
          description: Success
      tags:
        - docs

  /swagger.json:
    get:
      security: []
      summary: Get swagger JSON
      operationId: getSwagger
      produces:
        - application/json
      responses:
        200:
          description: Success
      tags:
        - docs

  /users/search:
    get:
      summary: Search users
      description: Searches for matching users by field
      security:
        - OauthSecurity:
            - user
      operationId: searchUsers
      parameters:
        - $ref: '#/parameters/searchTerm'
        - $ref: '#/parameters/searchField'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/fullMatch'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/users'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - users

  /users/{userID}:
    get:
      summary: Get user by ID
      description: Returns a user for the provided user ID
      security:
        - OauthSecurity:
            - user
      operationId: getUser
      parameters:
        - name: userID
          description: the user ID
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/user'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - users

  /users:
    post:
      summary: Add user
      description: Creates a new user record
      security:
        - OauthSecurity:
            - user
      operationId: addUser
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/user'
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/user'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '409':
          $ref: '#/responses/conflict'
      tags:
        - users

  /users/username/{userName}:
    get:
      summary: Get user by User Name
      description: Returns a user for the provided user name
      security:
        - OauthSecurity:
            - user
      operationId: getUserByUserName
      parameters:
        - name: userName
          description: the user name value
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/user'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - users

  /onboard/cla-manager/lfid/{lf_id}:
    get:
      summary: Get CLA Manager Request by LFID
      description: Get CLA Manager Request by LFID
      security:
        - OauthSecurity: []
      operationId: getCLAManagerRequestsByLFID
      parameters:
        - name: lf_id
          description: the user lfid
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/onboard-cla-manager-requests'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - onboard

  /onboard/cla-manager/requests/{request_id}:
    delete:
      summary: Deletes a CLA Manager Request by request id
      description: Deletes CLA Manager Request by request id
      security:
        - OauthSecurity: []
      operationId: deleteCLAManagerRequestsByRequestID
      parameters:
        - name: request_id
          description: the request id
          in: path
          type: string
          required: true
      responses:
        '204':
          $ref: '#/responses/resource-deleted'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - onboard

  /onboard/cla-manager:
    post:
      summary: CLA Manager Request
      description: CLA Manager Request
      security:
        - OauthSecurity: []
      operationId: createCLAManagerRequest
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/onboard-cla-manager-request'
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/onboard-cla-manager-request'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '409':
          $ref: '#/responses/conflict'
      tags:
        - onboard

  /onboard/notification:
    post:
      summary: Onboard Send Notification/Message
      description: Onboard Send Notification/Message
      operationId: sendNotification
      security:
        - OauthSecurity: []
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/onboard-notification-request'
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/onboard-notification-response'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '409':
          $ref: '#/responses/conflict'
      tags:
        - onboard

  /signatures/{signatureID}:
    get:
      summary: Get the signature by ID
      description: Returns a list of signatures when provided the signature ID
      security:
        - OauthSecurity: []
      operationId: getSignatures
      parameters:
        - name: signatureID
          description: the signature ID
          in: path
          type: string
          required: true
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/companyName'
        - $ref: '#/parameters/userName'
        - $ref: '#/parameters/lfid'
        - $ref: '#/parameters/ghid'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/signatures'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - signatures

  /signatures/project/{projectID}:
    get:
      summary: Get project signatures
      description: Returns a list of project signature models when provided the project ID
      security:
        - OauthSecurity: []
      operationId: getProjectSignatures
      parameters:
        - name: projectID
          description: the project ID
          in: path
          type: string
          required: true
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/companyName'
        - $ref: '#/parameters/userName'
        - $ref: '#/parameters/searchTerm'
        - $ref: '#/parameters/searchField'
        - $ref: '#/parameters/fullMatch'
        - $ref: '#/parameters/lfid'
        - $ref: '#/parameters/ghid'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/signatures'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - signatures

  /signatures/project/{projectID}/company/{companyID}:
    get:
      summary: Get project company signatures
      description: Returns a list of project signature models when provided the project ID and company ID
      security:
        - OauthSecurity: []
      operationId: getProjectCompanySignatures
      parameters:
        - name: projectID
          description: the project ID
          in: path
          type: string
          required: true
        - name: companyID
          description: the company ID
          in: path
          type: string
          required: true
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/companyName'
        - $ref: '#/parameters/userName'
        - $ref: '#/parameters/lfid'
        - $ref: '#/parameters/ghid'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/signatures'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - signatures

  /signatures/company/{companyID}:
    get:
      summary: Get company signatures
      description: Returns a list of company signatures when provided the company ID
      security:
        - OauthSecurity: []
      operationId: getCompanySignatures
      parameters:
        - name: companyID
          description: the company ID
          in: path
          type: string
          required: true
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/companyName'
        - $ref: '#/parameters/userName'
        - $ref: '#/parameters/lfid'
        - $ref: '#/parameters/ghid'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/signatures'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - signatures

  /signatures/user/{userID}:
    get:
      summary: Get user signatures
      description: Returns a list of user signatures when provided the user ID
      security:
        - OauthSecurity: []
      operationId: getUserSignatures
      parameters:
        - name: userID
          description: the user ID
          in: path
          type: string
          required: true
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/companyName'
        - $ref: '#/parameters/userName'
        - $ref: '#/parameters/lfid'
        - $ref: '#/parameters/ghid'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/signatures'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - signatures

  /signatures/project/{projectID}/company/{companyID}/employee:
    get:
      summary: Get project company signatures for the employees
      description: Returns a list of employee project signature models when provided the project ID and company ID
      security:
        - OauthSecurity: []
      operationId: getProjectCompanyEmployeeSignatures
      parameters:
        - name: projectID
          description: the project ID
          in: path
          type: string
          required: true
        - name: companyID
          description: the company ID
          in: path
          type: string
          required: true
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/companyName'
        - $ref: '#/parameters/userName'
        - $ref: '#/parameters/lfid'
        - $ref: '#/parameters/ghid'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/signatures'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - signatures

  /signatures/{signatureID}/gh-org-whitelist:
    get:
      summary: Signature Update
      security:
        - OauthSecurity: []
      operationId: getGitHubOrgWhitelist
      parameters:
        - name: signatureID
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/github-org'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - signatures
    delete:
      summary: Signature Update
      security:
        - OauthSecurity: []
      operationId: deleteGitHubOrgWhitelist
      parameters:
        - name: signatureID
          in: path
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/gh-org-whitelist'
      responses:
        '204':
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/github-org'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - signatures
    post:
      summary: Signature Update
      security:
        - OauthSecurity: []
      operationId: addGitHubOrgWhitelist
      parameters:
        - name: signatureID
          in: path
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/gh-org-whitelist'
      responses:
        '200':
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/github-org'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - signatures

  /project:
    get:
      summary: Get Project IDs based on PM
      security:
        - OauthSecurity: []
      operationId: getProjects
      responses:
        '200':
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/project'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - project

  /project/{projectSfdcId}/:
    parameters:
      - name: projectSfdcId
        in: path
        type: string
        required: true
    get:
      summary: Get Project by ID from SFDC
      security:
        - OauthSecurity: []
      operationId: getProjectById
      responses:
        '200':
          description: 'Success'
          schema:
            type: object
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - project

  /project/{projectSfdcId}/contract-group:
    parameters:
      - name: projectSfdcId
        in: path
        type: string
        required: true
    get:
      summary: Get contract groups
      security:
        - OauthSecurity: []
      operationId: getContractGroups
      tags:
        - contractGroup
      responses:
        '200':
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/contract-group'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
    post:
      summary: Create new Contract Group
      security:
        - OauthSecurity: []
      operationId: createContractGroup
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/contract-group'
      responses:
        '200':
          description: 'Success'
          schema:
            type: object
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - contractGroup

  /contract-group/{contractGroupId}/contract-template:
    parameters:
      - name: contractGroupId
        in: path
        type: string
        required: true
    post:
      summary: Create new Contract Template
      security:
        - OauthSecurity: []
      operationId: createContractTemplate
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/contract-template'
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            type: object
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - contractGroup

  /contract-group/{contractGroupId}/github:
    parameters:
      - name: contractGroupId
        in: path
        type: string
        required: true
    post:
      summary: Adds a GitHub instance to the contract group
      security:
        - OauthSecurity: []
      operationId: addGitHubOrg
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/github'
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            type: object
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - contractGroup

  /project/{projectSfdcId}/contract-group/{contractGroupId}/gerrit:
    parameters:
      - name: projectSfdcId
        in: path
        type: string
        required: true
      - name: contractGroupId
        in: path
        type: string
        required: true
    post:
      summary: Adds a Gerrit instance to the contract group
      security:
        - OauthSecurity: []
      operationId: addGerritInstance
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/gerrit'
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            type: object
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - contractGroup

  /project/{projectSfdcId}/contract-group/{contractGroupId}/gerrit/{gerritInstanceId}:
    parameters:
      - name: projectSfdcId
        in: path
        type: string
        required: true
      - name: contractGroupId
        in: path
        type: string
        required: true
      - name: gerritInstanceId
        in: path
        type: string
        required: true
    delete:
      summary: Delete a Gerrit Instance
      security:
        - OauthSecurity: []
      operationId: deleteGerritInstance
      responses:
        '204':
          description: 'Success'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - contractGroup

  /project/{projectSfdcID}/contract-group/{contractGroupId}/signature:
    parameters:
      - name: projectSfdcID
        in: path
        type: string
        required: true
      - name: contractGroupId
        in: path
        type: string
        required: true
    get:
      summary: Get Contract Group Signatures
      security:
        - OauthSecurity: []
      operationId: getContractGroupSignatures
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/contract-group-signatures'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - contractGroup

  /company/{companyID}:
    get:
      summary: Get company
      description: Returns the company by ID
      security:
        - OauthSecurity:
            - company
      operationId: getCompany
      parameters:
        - name: companyID
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/company'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - company

  /company/user/{userID}:
    get:
      summary: API to retrieve a list of companies where the user is the manager
      security:
        - OauthSecurity:
            - company
      operationId: getCompaniesByUserManager
      parameters:
        - name: userID
          description: the user ID of the user manager
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/companies'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - company

  /company/user/{userID}/invites:
    get:
      summary: API to retrieve a list of companies where the user is the manager (approved) and in the invite list
      security:
        - OauthSecurity:
            - company
      operationId: getCompaniesByUserManagerWithInvites
      parameters:
        - name: userID
          description: the user ID of the user manager
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/companies-with-invites'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - company

  /company/search:
    get:
      summary: Search companies
      description: Searches for matching companies by name
      security:
        - OauthSecurity:
            - company
      operationId: searchCompany
      parameters:
        - name: companyName
          in: query
          type: string
          required: true
        - name: nextKey
          description: The next key to scan - used as a page offset for scanning batches of records
          in: query
          type: string
          required: false
          # UUID v4 regex
          pattern: '[a-f0-9]{8}-?[a-f0-9]{4}-?4[a-f0-9]{3}-?[89ab][a-f0-9]{3}-?[a-f0-9]{12}'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/companies'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - company

  /company/{companyID}/cla/invitelist:
    get:
      summary: API to retrieve pending invite requests
      security:
        - OauthSecurity:
            - company
      operationId: getCompanyInviteRequests
      parameters:
        - name: companyID
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/company-invite-user'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - company

  /company/{companyID}/{userID}/invitelist:
    get:
      summary: API to retrieve pending invite requests
      security:
        - OauthSecurity:
            - company
      operationId: getCompanyUserInviteRequests
      parameters:
        - name: companyID
          description: the company ID of the invitation
          in: path
          type: string
          required: true
        - name: userID
          description: the user ID of the invitation
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/company-invite-user'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - company

  /company/{companyID}/cla/accesslist:
    parameters:
      - name: companyID
        in: path
        type: string
        required: true
      - name: user
        in: body
        schema:
          $ref: '#/definitions/access-list-user'
    post:
      summary: Add user to CLA accesslist
      security:
        - OauthSecurity:
            - company
      operationId: addUsertoCompanyAccessList
      responses:
        '200':
          description: 'Success'
          schema:
            type: object
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - company
    delete:
      summary: Delete user from pending invites
      security:
        - OauthSecurity:
            - company
      operationId: deletePendingInvite
      responses:
        '200':
          description: 'Success'
          schema:
            type: object
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - company

  /company/{companyID}/invite-request:
    post:
      summary: Send Email to Company Admins for Request of Access to be a CLA Manager
      security:
        - OauthSecurity:
            - company
      operationId: sendInviteRequest
      parameters:
        - name: companyID
          in: path
          type: string
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/user'
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            type: object
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - company

  /company/{companyID}/cla/{corporateClaID}/whitelist/githuborg:
    parameters:
      - name: companyID
        in: path
        type: string
        required: true
      - name: corporateClaID
        in: path
        type: string
        required: true
      - name: githubOrganizationId
        in: body
        schema:
          $ref: '#/definitions/github-org'
    get:
      summary: Get All Github Organization Under the CCLA whitelist
      security:
        - OauthSecurity:
            - company
      operationId: getGithubOrganizationfromCla
      responses:
        '200':
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/github-org'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - company
    post:
      summary: Add Github Organization to the CCLA whitelist
      security:
        - OauthSecurity:
            - company
      operationId: addGithubOrganizationFromCla
      responses:
        '200':
          description: 'Success'
          schema:
            type: object
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - company
    delete:
      summary: Delete Github Organization from CCLA whitelist
      security:
        - OauthSecurity:
            - company
      operationId: deleteGithubOrganizationFromCla
      responses:
        '200':
          description: 'Success'
          schema:
            type: object
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - company

  /template:
    get:
      summary: Get Available Templates
      security:
        - OauthSecurity: []
      operationId: getTemplates
      responses:
        '200':
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/template'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - template

  /clagroup/{claGroupId}/template:
    parameters:
      - name: claGroupId
        in: path
        type: string
        required: true
    post:
      summary: Create contract template for CLA Group
      security:
        - OauthSecurity: []
      operationId: createCLAGroupTemplate
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/create-cla-group-template'
          required: true
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/template-pdfs'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - template

  /github/login:
    get:
      summary: API to redirect to Github Auth flow
      security: []
      operationId: login
      parameters:
        - name: callback
          in: query
          type: string
          required: true
      responses:
        302:
          description: '302 response'
          headers:
            Location:
              type: 'string'
      tags:
        - github

  /github/redirect:
    get:
      summary: API that Github redirects to after successful auth
      security: []
      operationId: redirect
      parameters:
        - name: code
          in: query
          type: string
          required: true
        - name: state
          in: query
          type: string
          required: true
      responses:
        302:
          description: '302 response'
          headers:
            Location:
              type: 'string'
      tags:
        - github

# Common parameters
parameters:
  pageSize:
    name: pageSize
    description: The maximum number of results per page, value must be a positive integer value
    in: query
    type: string
    required: false
    pattern: '^[1-9][\d]*$'
    default: '10'
  companyName:
    name: companyName
    description: The optional company name filter
    in: query
    type: string
    required: false
    pattern: '^\w+$'
  userName:
    name: userName
    description: The optional user name filter
    in: query
    type: string
    required: false
    pattern: '^\w+$'
  searchField:
    name: searchField
    description: The optional user name filter
    in: query
    type: string
    required: false
    pattern: '^\w+$'
  searchTerm:
    name: searchTerm
    description: The optional search filter
    in: query
    type: string
    required: false
  fullMatch:
    name: fullMatch
    in: query
    type: boolean
    default: false
    required: false
  lfid:
    name: lfid
    description: The optional LFID filter
    in: query
    type: string
    required: false
    pattern: '^\w+$'
  ghid:
    name: ghid
    description: The optional GitHub ID filter
    in: query
    type: string
    required: false
    pattern: '^\w+$'
  nextKey:
    name: nextKey
    description: The next key to scan - used as a page offset for scanning batches of records
    in: query
    type: string
    required: false
    # UUID v4 regex
    pattern: '[a-f0-9]{8}-?[a-f0-9]{4}-?4[a-f0-9]{3}-?[89ab][a-f0-9]{3}-?[a-f0-9]{12}'

definitions:
  user:
    type: object
    x-nullable: false
    title: User
    description: User model
    properties:
      userID:
        type: string
      username:
        type: string
      dateCreated:
        type: string
      dateModified:
        type: string
      lfEmail:
        type: string
      lfUsername:
        type: string
      companyID:
        type: string
      githubID:
        type: string
      githubUsername:
        type: string
      version:
        type: string
      emails:
        type: array
        items:
          type: string

  users:
    type: object
    x-nullable: false
    title: Users
    description: A list of users
    properties:
      searchField:
        type: string
      searchTerm:
        type: string
      fullMatch:
        type: boolean
      resultCount:
        type: integer
        format: int64
        x-omitempty: false
      totalCount:
        type: integer
        format: int64
        x-omitempty: false
      lastKeyScanned:
        type: string
      users:
        type: array
        x-omitempty: false
        items:
          $ref: '#/definitions/user'

  onboard-cla-manager-requests:
    type: object
    x-nullable: false
    title: Onboard CLA Manager Models
    description: Onboard CLA Manager Request Models
    properties:
      requests:
        type: array
        x-omitempty: false
        items:
          $ref: '#/definitions/onboard-cla-manager-request'

  onboard-cla-manager-request:
    type: object
    x-nullable: false
    title: Onboard CLA Manager Model
    description: Onboard CLA Manager Request Model
    properties:
      request_id:
        type: string
      lf_id:
        type: string
      project_name:
        type: string
      company_name:
        type: string
      user_full_name:
        type: string
      user_email:
        type: string
      date_created:
        type: string
      date_modified:
        type: string
    required:
      - lf_id
      - project_name
      - company_name
      - user_full_name
      - user_email

  onboard-notification-request:
    type: object
    x-nullable: false
    title: Onboard Notification Request Model
    description: Onboard Notification Request Model
    properties:
      sender_email:
        type: string
      recipient_emails:
        type: array
        description: A list of recipient email addresses
        items:
          type: string
      subject:
        type: string
      email_body:
        type: string
    required:
      - sender_email
      - recipient_emails
      - subject
      - email_body

  onboard-notification-response:
    type: object
    x-nullable: false
    title: Onboard Notification Response Model
    description: Onboard Notification Response Model
    properties:
      message:
        type: string
    required:
      - message

  gh-org-whitelist:
    type: object
    x-nullable: false
    title: Github Organization Whitelist
    description: Github Organiation Whitelist
    properties:
      organization_id:
        type: string
    required:
      - organization_id

  github-org:
    type: object
    x-nullable: false
    title: Github Organization
    description: Github Organiation object used for CCLA whitelist
    properties:
      id:
        type: string
      selected:
        type: boolean
        default: false
    required:
      - id

  company-invite-user:
    type: object
    x-nullable: false
    title: User
    description: User used for response from invitelist
    properties:
      userName:
        type: string
      inviteId:
        type: string
      userEmail:
        type: string
      userLFID:
        type: string
      status:
        type: string
      companyName:
        type: string

  access-list-user:
    type: object
    x-nullable: false
    title: User
    description: User used for request in company access list
    properties:
      inviteId:
        type: string
      userLFID:
        type: string

  project:
    type: object
    x-nullable: false
    title: Project
    description: Project object that gets returned
    properties:
      sfdcId:
        type: string
      name:
        type: string
      description:
        type: string
      logoUrl:
        type: string

  contract-group:
    type: object
    x-nullable: false
    title: Contract Group
    description: Contract Group object that gets returned
    properties:
      contractGroupId:
        type: string
        readOnly: true
      projectSfdcId:
        type: string
      name:
        type: string
      corporateClaEnabled:
        type: boolean
        default: false
      individualClaEnabled:
        type: boolean
        default: false
      corporateClaRequiresIndividualCla:
        type: boolean
      cclaTemplate:
        type: object
        $ref: '#/definitions/contract-template'
      iclaTemplate:
        type: object
        $ref: '#/definitions/contract-template'
      githubOrganizations:
        type: array
        items:
          $ref: '#/definitions/github'
        readOnly: true
      gerritInstances:
        type: array
        items:
          $ref: '#/definitions/gerrit'
        readOnly: true
    required:
      - name

  contract-template:
    type: object
    x-nullable: false
    title: Contract Template
    description: Create Contract Template object
    properties:
      contractTemplateId:
        type: string
        readOnly: true
      contractGroupId:
        type: string
      type:
        type: string
        enum:
          - CCLA
          - ICLA
      document:
        type: string
      majorVersion:
        type: integer
      minorVersion:
        type: integer
      createdAt:
        type: string
      name:
        type: string

  create-cla-group-template:
    title: CreateCLAGroupTemplate
    type: object
    x-nullable: false
    properties:
      TemplateID:
        type: string
      MetaFields:
        type: array
        items:
          $ref: '#/definitions/meta-field'

  template-pdfs:
    title: TemplatePDFs
    type: object
    x-nullable: false
    properties:
      individualPDFURL:
        type: string
      corporatePDFURL:
        type: string

  github:
    type: object
    x-nullable: false
    title: Add a GitHub organization
    description: Adds a GitHub organization to the contract group
    properties:
      githubOrganizationId:
        readOnly: true
        type: string
      contractGroupId:
        type: string
      name:
        type: string
      installationId:
        readOnly: true
        type: string
      authorizingGithubId:
        readOnly: true
      authorizingUserName:
        readOnly: true
        type: string
      createdBy:
        readOnly: true
        type: string
      updatedBy:
        readOnly: true
        type: string

  gerrit:
    type: object
    x-nullable: false
    title: Adds a Gerrit instance
    description: Adds a Gerrit instance to the contract group
    properties:
      gerritInstanceId:
        readOnly: true
        type: string
      contractGroupId:
        readOnly: true
        type: string
      ldapGroupId:
        type: string
      ldapGroupName:
        type: string
      url:
        type: string
      createdBy:
        readOnly: true
        type: string
      updatedBy:
        readOnly: true
        type: string
    required:
      - ldapGroupId
      - ldapGroupName
      - url

  companies:
    type: object
    x-nullable: false
    title: Companies
    description: A list of companies
    properties:
      searchTerms:
        type: string
      resultCount:
        type: integer
        format: int64
        x-omitempty: false
      totalCount:
        type: integer
        format: int64
        x-omitempty: false
      lastKeyScanned:
        type: string
      companies:
        type: array
        x-omitempty: false
        items:
          $ref: '#/definitions/company'

  companies-with-invites:
    type: object
    x-nullable: false
    title: Companies
    description: A list of companies with invitation status
    properties:
      resultCount:
        type: integer
        format: int64
        x-omitempty: false
      totalCount:
        type: integer
        format: int64
        x-omitempty: false
      lastKeyScanned:
        type: string
      companies-with-invites:
        type: array
        x-omitempty: false
        items:
          $ref: '#/definitions/company-with-invite'

  company:
    type: object
    x-nullable: false
    title: Company
    description: Company Model
    properties:
      companyID:
        description: The company unique ID
        example: 13f79a8f-734d-44c1-ab03-ab98c2a1b64a
        type: string
      companyName:
        description: The company name
        example: Acme, Inc.
        type: string
      companyACL:
        type: array
        description: A list of user ID's authorized to make changes to the company
        items:
          type: string
      created:
        type: string
        description: The company record created date/time
        format: date-time
      updated:
        type: string
        description: The company record update date/time
        format: date-time

  company-with-invite:
    type: object
    x-nullable: false
    title: Company
    description: Company Model with Invitation status
    properties:
      companyID:
        description: The company unique ID
        example: 13f79a8f-734d-44c1-ab03-ab98c2a1b64a
        type: string
      companyName:
        description: The company name
        example: Acme, Inc.
        type: string
      companyACL:
        type: array
        description: A list of user ID's authorized to make changes to the company
        items:
          type: string
      status:
        type: string
        description: The user's invitation status
      created:
        type: string
        description: The company record created date/time
        format: date-time
      updated:
        type: string
        description: The company record update date/time
        format: date-time

  signatures:
    type: object
    x-nullable: false
    title: Signatures
    description: Signatures
    properties:
      projectID:
        type: string
      resultCount:
        type: integer
        format: int64
        x-omitempty: false
      totalCount:
        type: integer
        format: int64
        x-omitempty: false
      lastKeyScanned:
        type: string
      signatures:
        type: array
        x-omitempty: false
        items:
          $ref: '#/definitions/signature'

  signature:
    type: object
    x-nullable: false
    title: A signature model
    description: A signature - may be an ICLA or CCLA signature
    properties:
      signatureID:
        type: string
      signatureCreated:
        type: string
      signatureModified:
        type: string
      signatureSigned:
        type: boolean
      signatureApproved:
        type: boolean
      signatureReferenceType:
        type: string
      signatureReferenceID:
        type: string
      signatureReferenceName:
        type: string
      signatureReferenceNameLower:
        type: string
      signatureType:
        type: string
      signatureACL:
        type: array
        items:
          $ref: '#/definitions/user'
      userName:
        type: string
      companyName:
        type: string
      projectID:
        type: string
      userGHID:
        type: string
      userLFID:
        type: string
      version:
        type: string
      created:
        type: string
      modified:
        type: string
      emailWhitelist:
        type: array
        items:
          type: string
      domainWhitelist:
        type: array
        items:
          type: string
      githubWhitelist:
        type: array
        items:
          type: string
      githubOrgWhitelist:
        type: array
        items:
          type: string

  contract-group-signatures:
    type: object
    x-nullable: false
    title: Contract Group Signatures Details
    description: Signature Details for a Contract Group
    properties:
      contractGroupId:
        type: string
        readOnly: true
      projectSfdcID:
        type: string
      cclaSignatures:
        type: array
        items:
          $ref: '#/definitions/ccla-signature-details'
      iclaSignatures:
        type: array
        items:
          $ref: '#/definitions/icla-signature-details'

  ccla-signature-details:
    type: object
    x-nullable: false
    title: ICLA Signature details
    description: ICLA Signatures Details
    properties:
      userName:
        type: string
      companyName:
        type: string
      githubUserId:
        type: string
      minorVersion:
        type: integer
      majorVersion:
        type: integer
      signedOn:
        type: string
      signed:
        type: boolean

  icla-signature-details:
    type: object
    x-nullable: false
    title: ICLA Signature details
    description: ICLA Signatures Details
    properties:
      userName:
        type: string
      githubUserId:
        type: string
      minorVersion:
        type: integer
      majorVersion:
        type: integer
      signedOn:
        type: string
      signed:
        type: boolean

  template:
    type: object
    x-nullable: false
    title: CLA Template
    description: CLA Template
    properties:
      Name:
        type: string
      ID:
        type: string
      description:
        type: string
      iclaHtmlBody:
        type: string
      cclaHtmlBody:
        type: string
      metaFields:
        type: array
        items:
          $ref: '#/definitions/meta-field'
      iclaFields:
        type: array
        items:
          $ref: '#/definitions/field'
      cclaFields:
        type: array
        items:
          $ref: '#/definitions/field'

  meta-field:
    title: MetaField
    type: object
    properties:
      name:
        type: string
      value:
        type: string
      description:
        type: string
      templateVariable:
        type: string

  field:
    title: Field
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      anchorString:
        type: string
      fieldType:
        type: string
      isOptional:
        type: boolean
      isEditable:
        type: boolean
      width:
        type: integer
      height:
        type: integer
      offsetX:
        type: integer
      offsetY:
        type: integer

  error-response:
    type: object
    x-nullable: false
    title: Error Response
    description: Standard error format
    properties:
      Code:
        type: string
      Message:
        type: string

  delete-response:
    type: object
    x-nullable: true
    title: Delete Response
    description: Response Message
    properties:
      Code:
        type: string
      Message:
        type: string

  health:
    type: object
    title: Health
    properties:
      TimeStamp:
        type: string
      Status:
        type: string
      Version:
        type: string
      Githash:
        type: string
      Branch:
        type: string
      BuildTimeStamp:
        type: string
      Healths:
        type: array
        items:
          $ref: '#/definitions/health-status'

  health-status:
    type: object
    properties:
      Name:
        type: string
      Duration:
        type: string
      Healthy:
        type: boolean
      Error:
        type: string
      TimeStamp:
        type: string
    title: Health Status

responses:
  resource-deleted:
    description: Resource Deleted
    schema:
      $ref: '#/definitions/delete-response'
  unauthorized:
    description: Unauthorized
    schema:
      $ref: '#/definitions/error-response'
  invalid-request:
    description: Invalid request
    schema:
      $ref: '#/definitions/error-response'
  forbidden:
    description: Insufficient privilege to execute action.
    schema:
      $ref: '#/definitions/error-response'
  not-found:
    description: Not found
    schema:
      $ref: '#/definitions/error-response'
  conflict:
    description: The request could not be completed due to a conflict with the current state of the target resource.
    schema:
      $ref: '#/definitions/error-response'
